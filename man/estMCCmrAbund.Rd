% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/estConnectivity.R
\name{estMCCmrAbund}
\alias{estMCCmrAbund}
\title{Estimate MC from abundance and transition probability estimates.}
\usage{
estMCCmrAbund(originRelAbund, psi, originDist, targetDist, originSites = NULL,
  targetSites = NULL, nSamples = 1000, row0 = 0, verbose = 0,
  alpha = 0.05)
}
\arguments{
\item{originRelAbund}{Relative abundances at B origin sites. Either a
numeric vector of length B that sums to 1 or an mcmc object with
\code{nSamples} rows  and columns including 'relN[1]' through 'relN[B]'.}

\item{psi}{Transition probabilities between B origin and W target sites.
Either a matrix with B rows and W columns where rows sum to 1 or a MARK
object with estimates of transition probabilities.}

\item{originDist}{Distances between the B origin sites.  Symmetric B by B
matrix.}

\item{targetDist}{Distances between the W target sites.  Symmetric W by W
matrix.}

\item{originSites}{If \code{psi} is a MARK object, this must be a numeric
vector indicating which sites are origin.}

\item{targetSites}{If \code{psi} is a MARK object, this must be a numeric
vector indicating which sites are target.}

\item{nSamples}{Number of times to resample \code{psi} and/or
\code{originRelAbund}.}

\item{row0}{If \code{originRelAbund} is an mcmc object, this can be set
to 0 (default) or any greater integer to specify where to stop ignoring
samples ("burn-in").}

\item{verbose}{0 (default), 1, or 2. 0 prints no output during run. 1 prints
a line every 100 samples.  2 prints a line every sample.}

\item{alpha}{Level for confidence intervals provided.}
}
\value{
\code{estMCCmrAbund} returns a list with elements:
\describe{
  \item{\code{sampleMC}}{\code{nSamples} sampled values for MC. Provided
     to allow the user to compute own summary statistics.}
  \item{\code{pointMC}}{Simple point estimate of MC, using the point
     estimates of \code{psi} and \code{originRelAbund}.}
  \item{\code{meanMC, medianMC}}{Mean and median of \code{sampleMC}.
     Estimates of MC incorporating parametric uncertainty.}
  \item{\code{seMC}}{Standard error of MC, estimated from SD of
     \code{sampleMC}.}
  \item{\code{simpleCI}}{\code{1 - alpha} confidence interval for MC,
     estimated as \code{alpha/2} and \code{1 - alpha/2} quantiles of
     \code{sampleMC}.}
  \item{\code{bcCI}}{Bias-corrected \code{1 - alpha} confidence interval
     for MC.  Preferable to \code{simpleCI} when \code{pointMC} is the
     best estimate of MC. \code{simpleCI} is preferred when
     \code{medianMC} is a better estimator. When \code{pointMC==medianMC},
     these should be equivalent.}
  \item{\code{hpdCI}}{\code{1 - alpha} credible interval for MC,
     estimated using the highest posterior density (HPD) method.}
}
}
\description{
Resampling of uncertainty for MC from RMark psi matrix estimates and/or JAGS
relative abundance MCMC samples.
}
\examples{
# Uncertainty in detection with equal abundances
nSamplesCMR <- 100 #10000 # Number of resampling iterations for generating confidence intervals
nSimulationsCMR <- 10 #length(cmrExamples)
\dontrun{
  nSamplesCMR <- 10000 # Number of resampling iterations for generating confidence intervals
  nSimulationsCMR <- length(cmrExamples)
}
originPos13 <- matrix(c(rep(seq(-99, -81, 2), each = 10),
                        rep(seq(49, 31, -2), 10)), 100, 2)
targetPos13 <- matrix(c(rep(seq(-79, -61, 2), each = 10),
                        rep(seq(9, -9, -2), 10)), 100, 2)
originPosCMR <- rowsum(originPos13, c(rep(1:2, 5, each = 5),
                                      rep(3:4, 5, each = 5))) / 25
originPosCMR
targetPosCMR <- rowsum(targetPos13, c(rep(1:2, 5, each = 5),
                                      rep(3:4, 5, each = 5))) / 25
targetPosCMR

originDist <- distFromPos(originPosCMR, 'ellipsoid')
targetDist <- distFromPos(targetPosCMR, 'ellipsoid')
originRelAbundTrue <- rep(0.25, 4)
# the second intermediate psi scenario, the "low" level
psiTrue <- samplePsis[["Low"]]
trueMC <- calcMC(originDist, targetDist, psiTrue, originRelAbundTrue)
trueMC

# Storage matrix for samples
cmrMCSample <- matrix(NA, nSamplesCMR, nSimulationsCMR)
summaryCMR <- data.frame(Simulation = 1:nSimulationsCMR, True=trueMC, estimate=NA,
                        mean=NA, median=NA, se=NA, lcl.simple=NA, ucl.simple=NA,
                        lcl.BC=NA, ucl.BC=NA)
for (r in 1:nSimulationsCMR) {
  cat("Simulation",r,"of",nSimulationsCMR,"\\n")
  fm <- cmrExamples[[r]]
  summaryCMR$estimate[r] <- calcMC(originDist, targetDist,
                                   RMark::TransitionMatrix(RMark::get.real(
                                     fm, "Psi", se=T))[5:8, c(3,2,1,4)],
                                   originRelAbundTrue)
  results <- estMCCmrAbund(originRelAbundTrue, fm, originDist, targetDist,
                           originSites = 5:8, targetSites = c(3,2,1,4),
                           nSamples = nSamplesCMR, verbose = 0)
  cmrMCSample[ , r] <- results$sampleMC
  summaryCMR$mean[r] <- results$meanMC
  summaryCMR$median[r] <- results$medianMC
  summaryCMR$se[r] <- results$seMC
  # Calculate confidence intervals using quantiles of sampled MC
  summaryCMR[r, c('lcl.simple', 'ucl.simple')] <- results$simpleCI
  summaryCMR[r, c('lcl.BC', 'ucl.BC')] <- results$bcCI
}

summaryCMR <- transform(summaryCMR, coverage.simple = (True>=lcl.simple &
                                                         True<=ucl.simple),
                        coverage.BC=(True>=lcl.BC & True<=ucl.BC))
summaryCMR
summary(summaryCMR)
biasCMR <- mean(summaryCMR$estimate) - trueMC
biasCMR
mseCMR <- mean((summaryCMR$estimate - trueMC)^2)
mseCMR
rmseCMR <- sqrt(mseCMR)
rmseCMR

# Simulation of BBS data to quantify uncertainty in relative abundance
nSamplesAbund <- 700 #1700 are stored
nSimulationsAbund <- 10 #length(abundExamples) is 100
\dontrun{
  nSamplesAbund <- 1700
  nSimulationsAbund <- length(abundExamples)
}
# Storage matrix for samples
abundMCSample <- matrix(NA, nSamplesAbund, nSimulationsAbund)
summaryAbund <- data.frame(Simulation = 1:nSimulationsAbund, True = trueMC,
                           estimate = NA, mean = NA, median = NA, se = NA,
                           lcl.simple = NA, ucl.simple = NA,
                           lcl.BC = NA, ucl.BC = NA, lclHPD = NA, uclHPD = NA)
for (r in 1:nSimulationsAbund) {
  cat("Simulation",r,"of",nSimulationsAbund,"\\n")
  row0 <- nrow(abundExamples[[r]]) - nSamplesAbund
  results <- estMCCmrAbund(abundExamples[[r]], psiTrue, originDist, targetDist,
                           row0 = row0, nSamples = nSamplesAbund, verbose = 1)
  abundMCSample[ , r] <- results$sampleMC
  summaryAbund$estimate[r] <- results$pointMC
  summaryAbund$mean[r] <- results$meanMC
  summaryAbund$median[r] <- results$medianMC
  summaryAbund$se[r] <- results$seMC
  # Calculate confidence intervals using quantiles of sampled MC
  summaryAbund[r, c('lcl.simple', 'ucl.simple')] <- results$simpleCI
  summaryAbund[r, c('lcl.BC', 'ucl.BC')] <- results$bcCI
  summaryAbund[r, c('lclHPD', 'uclHPD')] <- results$hpdCI
}

summaryAbund <- transform(summaryAbund, coverage.simple = (True >= lcl.simple &
                                                             True <= ucl.simple),
                          coverage.BC=(True>=lcl.BC & True<=ucl.BC),
                          coverage.HPD=(True>=lclHPD & True<=uclHPD))
summaryAbund
summary(summaryAbund)
biasAbund <- mean(summaryAbund$estimate) - trueMC
biasAbund
mseAbund <- mean((summaryAbund$estimate - trueMC)^2)
mseAbund
rmseAbund <- sqrt(mseAbund)
rmseAbund
}

